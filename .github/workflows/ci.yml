# 1 워크플로의 이름 지정
name: Django CI

# 2 워크플로가 시작될 조건 지정
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    # 3. 실행 환경 지정
    runs-on: ubuntu-latest
    strategy:
      # max-parallel: 4는 Github Actions에서 제공하는 기본 파일의 설정
      max-parallel: 4
      matrix:
        python-version: [3.11]
    # 4. 실행 스템 지정
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

#    - name: create-json
#      id: create-json
#      uses: jsdaniell/create-json@1.1.2
#      with:
#        name: "secrets.json"
#        json: ${{ secrets.SECERT_JSON }}

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements_bk.txt

    - name: Run Tests
      run: |
        python manage.py test

    - name: excuting remote ssh commands to deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.REMOTE_SSH_HOST }}
        port: ${{ secrets.REMOTE_SSH_PORT }}
        username: ${{ secrets.REMOTE_SSH_USERNAME }}
        key: ${{ secrets.REMOTE_SSH_KEY }}
        debug: true

      # sudo usermod -aG docker 사용자명 일반 사용자가 도커 권한을 가질 수 있도록 Docker 그룹에 추가
    - name: Docker build / create container
      run: |
        docker ps -a
#        echo "docker stop"
#        docker stop biocat_con
#        echo "docker rm"
#        docker rm biocat_con
#        echo "docker rmi"
#        docker rmi biocat_img
#        docker build -t biocat_img /home/agics-ai/docker/biocat/Dockerfile
#        docker run --name biocat_con -d -p 8000:8000 biocat_img
          
